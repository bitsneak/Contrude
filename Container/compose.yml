version: "3.8"

services:
  traefik:
    image: traefik:v3.0.1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=websecure"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=diplomarbeitcontrude@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"   # only HTTPS traffic
      - "8080:8080" # traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt" # storage for Let's Encrypt certificates
    deploy:
      mode: global

  db_configuration:
    image: mysql:8.0.29
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_ONETIME_PASSWORD: "yes"
    volumes:
      - ./databases/configuration_data/mysql:/var/lib/mysql
      - ./databases/configuration_data/scripts:/docker-entrypoint-initdb.d/
    ports:
      - "3307:3306"
    deploy:
      mode: global

  db_sensor:
    image: mysql:8.0.29
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_ONETIME_PASSWORD: "yes"
    volumes:
      - ./databases/sensor_data/mysql:/var/lib/mysql
      - ./databases/sensor_data/scripts:/docker-entrypoint-initdb.d/
    ports:
      - "3308:3306"
    deploy:
      mode: global

  db_user:
    image: mysql:8.0.29
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_ONETIME_PASSWORD: "yes"
    volumes:
      - ./databases/user/mysql:/var/lib/mysql
      - ./databases/user/scripts:/docker-entrypoint-initdb.d/
    ports:
      - "3309:3306"
    deploy:
      mode: global

  node_auth:
    image: node:22-alpine3.18
    environment:
      SERVER_PORT: 80
      DB_PASSWORD_USER: /run/secrets/db_pwd_user
      ACCESS_TOKEN_SECRET: /run/secrets/node_auth_access_token
      REFRESH_TOKEN_SECRET: /run/secrets/node_auth_refresh_token
    secrets:
      - db_pwd_user
      - node_auth_access_token
      - node_auth_refresh_token
    depends_on:
      - traefik
      - db_user
    working_dir: /app
    command: "node app.js"
    volumes:
      - ./node/authentication/:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node_auth.rule=Host(`auth.contrude.eu`)" # hostname
      - "traefik.http.services.node_auth.loadbalancer.server.port=80" # port
      - "traefik.http.routers.node_auth.entrypoints=websecure" # reroute to https
      - "traefik.http.routers.node_auth.tls.certresolver=myresolver"
    deploy:
      mode: global

  node_rest:
    image: node:22-alpine3.18
    environment:
      SERVER_PORT: 80
      DB_PASSWORD_CONFIGURATION: /run/secrets/db_pwd_configuration
      DB_PASSWORD_SENSOR: /run/secrets/db_pwd_sensor
    secrets:
      - db_pwd_configuration
      - db_pwd_sensor
    depends_on:
      - traefik
      - node_auth
      - db_configuration
      - db_sensor
    working_dir: /app
    command: "node app.js"
    volumes:
      - ./node/rest/:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node_rest.rule=Host(`rest.contrude.eu`)" # hostname
      - "traefik.http.services.node_rest.loadbalancer.server.port=80" # port
      - "traefik.http.routers.node_rest.entrypoints=websecure" # reroute to https
      - "traefik.http.routers.node_rest.tls.certresolver=myresolver"
    deploy:
      mode: global

secrets:
  db_pwd_configuration:
    external: true
  db_pwd_sensor:
    external: true
  db_pwd_user:
    external: true
  node_auth_access_token:
    external: true
  node_auth_refresh_token:
    external: true
