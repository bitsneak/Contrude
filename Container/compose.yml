services:
  traefik:
    image: traefik:v3.1.5
    env_file: .env
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=websecure"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${CERT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443" # only HTTPS traffic
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt:rw" # storage for Let's Encrypt certificates
    labels:
      traefik.enable: true
      traefik.http.routers.api.rule: Host(`traefik.localhost`) # hostname
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.entrypoints: websecure # reroute to https
      traefik.http.routers.api.tls.certresolver: myresolver
      traefik.http.routers.api.middlewares: traefik-auth
      traefik.http.middlewares.traefik-auth.digestauth.users: ${DASHBOARD_AUTH}
      traefik.http.middlewares.traefik-auth.digestauth.removeheader: true
    deploy: 
      mode: global

  mqtt:
    image: eclipse-mosquitto:openssl
    volumes:
      - ./mqtt/config:/mosquitto/config:ro
      - ./mqtt/data:/mosquitto/data:rw
      - ./mqtt/log:/mosquitto/log:rw
    ports:
      - "1883:1883"
      - "9001:9001"

  telegraf:
    image: telegraf:1.32-alpine
    env_file: ./telegraf/.env
    depends_on:
      - mqtt
      - db_sensor
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    deploy:
      mode: global

  db_configuration:
    image: mysql:8.0.29
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_ONETIME_PASSWORD: "yes"
    volumes:
      - ./databases/configuration_data/mysql:/var/lib/mysql:rw
      - ./databases/configuration_data/scripts:/docker-entrypoint-initdb.d/:ro
    ports:
      - "3307:3306"
    deploy:
      mode: global

  db_sensor:
    image: influxdb:2.7-alpine
    volumes:
      - ./databases/sensor_data/data:/var/lib/influxdb2:rw
    ports:
      - "8086:8086"
    deploy:
      mode: global

  db_user:
    image: mysql:8.0.29
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_ONETIME_PASSWORD: "yes"
    volumes:
      - ./databases/user/mysql:/var/lib/mysql:rw
      - ./databases/user/scripts:/docker-entrypoint-initdb.d/:ro
    ports:
      - "3308:3306"
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:main
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
    depends_on:
      - db_sensor
    volumes:
      - ./grafana:/var/lib/grafana:rw
    ports:
      - "3000:3000"
    deploy:
      mode: global

  node_auth:
    image: node:22-alpine3.18
    env_file: ./node/auth/.env
    depends_on:
      - traefik
      - db_user
    working_dir: /app
    command: "node app.js"
    volumes:
      - ./node/auth/:/app:rw
      # ssl certificates
      - ./databases/user/mysql/ca.pem:/app/ssl/db/user/ca.pem:ro
      - ./databases/user/mysql/client-cert.pem:/app/ssl/db/user/cert.pem:ro
      - ./databases/user/mysql/client-key.pem:/app/ssl/db/user/key.pem:ro
    labels:
      traefik.enable: true
      traefik.http.routers.node_auth.rule: Host(`auth.localhost`) # hostname
      traefik.http.services.node_auth.loadbalancer.server.port: 80 # port
      traefik.http.routers.node_auth.entrypoints: websecure # reroute to https
      traefik.http.routers.node_auth.tls.certresolver: myresolver
    deploy:
      mode: global  

  node_rest:
    image: node:22-alpine3.18
    env_file: ./node/rest/.env
    depends_on:
      - traefik
      - node_auth
      - db_configuration
      - db_sensor
    working_dir: /app
    command: "node app.js"
    volumes:
      - ./node/rest/:/app:rw
      # ssl certificates configuration
      - ./databases/configuration_data/mysql/ca.pem:/app/ssl/db/configuration/ca.pem:ro
      - ./databases/configuration_data/mysql/client-cert.pem:/app/ssl/db/configuration/cert.pem:ro
      - ./databases/configuration_data/mysql/client-key.pem:/app/ssl/db/configuration/key.pem:ro
    labels:
      traefik.enable: true
      traefik.http.routers.node_rest.rule: Host(`rest.localhost`) # hostname
      traefik.http.services.node_rest.loadbalancer.server.port: 80 # port
      traefik.http.routers.node_rest.entrypoints: websecure # reroute to https
      traefik.http.routers.node_rest.tls.certresolver: myresolver
    deploy:
      mode: global